# Configuration file for powspec (default: `powspec.conf').
# Format: keyword = value # comment
#     or: keyword = [element1, element2]
#    see: https://github.com/cheng-zhao/libcfg for details.
# Some of the entries allow expressions, see
#         https://github.com/cheng-zhao/libast for details.
# NOTE that command line options have priority over this file.
# Unnecessary entries can be left unset.

####################################################
#  Specifications of the data and random catalogs  #
####################################################

DATA_CATALOG    = /global/project/projectdirs/desi/mocks/UNIT/HOD_Shadab/multiple_snapshot_lightcone/UNIT_lightcone_multibox_ELG_footprint_nz_NGC.dat
RAND_CATALOG    = /global/project/projectdirs/desi/mocks/UNIT/HOD_Shadab/multiple_snapshot_lightcone/UNIT_lightcone_multibox_ELG_footprint_nz_1xdata_5.ran_NGC.dat
    # Filename of the input data/random catalogs.
    # String or 2-element string array (for cross power spectra).
DATA_FORMAT     = 0
RAND_FORMAT     = 0
    # Format of the input catalogs (unset: 0).
    # Integer, same dimension as `DATA_CATALOG`.
    # Allowed values are:
    # * 0: ASCII text file;
    # * 1: FITS table.
DATA_SKIP       = 
RAND_SKIP       = 
    # Number of lines to be skipped for ASCII format input files (unset: 0).
    # Long integer, same dimension as `DATA_CATALOG`.
    # If only one of catalogs is in ASCII format, set an arbitrary value
    #   for the other catalog.
DATA_COMMENT    = 
RAND_COMMENT    = 
    # Characters for indicating comment lines for ASCII files (unset: '').
    # Character, same dimension as `DATA_CATALOG`. '' for disabling comments.
DATA_FORMATTER  = %lf %lf %lf %lf %lf
RAND_FORMATTER  = %lf %lf %lf %lf %lf
    # C99-style formatter for reading columns of ASCII format input files.
    # String, same dimension as `DATA_CATALOG` (e.g. "%d %ld %f %lf %s").
    # If a column is suppressed by *, it is not counted for the column number.
    #   e.g., for "%d %*s %f", the float number corresponds to column $2.
    # See https://en.cppreference.com/w/c/io/fscanf for details on the format.
DATA_POSITION   = [$1, $2, $4]
RAND_POSITION   = [$1, $2, $4]
    # 3-D coordinates, in the order of [x,y,z] or [RA,Dec,redshift].
    # 3- or 6-element string array, depending on the number of input catalogs.
    # They can be column indicator or expressions (e.g. "${RA}" or "$1 % 100").
    # Allowed values enclosed by ${}:
    # * string: column name of a FITS file;
    # * long integer: column number of an ASCII file (starting from 1).
DATA_WT_COMP    = 
RAND_WT_COMP    = 
    # Completeness weights of data/random (unset: 1).
    # Column indicator or expression, same dimension as `DATA_CATALOG`.
DATA_WT_FKP     = 1. / (1 + 5000 * $5)
RAND_WT_FKP     = 1. / (1 + 5000 * $5)
    # FKP weights of data/random (unset: 1).
    # Column indicator or expression, same dimension as `DATA_CATALOG`.
DATA_NZ         = $5
RAND_NZ         = $5
    # Radial number density of data/random.
    # Column indicator or expression, same dimension as `DATA_CATALOG`.
    # `RAND_NZ` is used by default, if it is unset then `DATA_NZ` is used.
DATA_SELECTION  = ($4 > 0.7) && ($4 < 1)
RAND_SELECTION  = ($4 > 0.7) && ($4 < 1)
    # Selection criteria for the data/random (unset: no selection).
    # Logical expression, same dimension as `DATA_CATALOG` (e.g. "$3 > 0.5").
DATA_CONVERT    = [T]
RAND_CONVERT    = [T]
    # Boolean option, same dimension as `DATA_CATALOG` (unset: F).
    # True (T) for converting the coordinates from [RA,Dec,redshift] to
    #   the comoving [x,y,z], given the fiducial cosmology.

##################################################
#  Fiducial cosmology for coordinate conversion  #
##################################################

OMEGA_M         = 0.31
    # Density parameter of matter at z = 0.
    # Double-precision number.
OMEGA_LAMBDA    = 0.69
    # Density parameter of Lambda at z = 0 (unset: 1 - OMEGA_M).
    # Double-precision number.
DE_EOS_W        = -1
    # Dark energy equation of state: w (unset: -1).
    # Double-precision number.
CMVDST_ERR      = 
    # Error for comoving distance evaluation (unset: 1e-08).
    # Double-precision number.
Z_CMVDST_CNVT   = 
    # Filename of a table for redshift to comoving distance conversion.
    # It must be a text file with two columns: (redshift, comoving distance).
    # If this file is set, the cosmological parameters above are omitted.
    # Lines start with '#' are omitted.

##################################################
#  Configurations for power spectra evaluation   #
##################################################

CUBIC_SIM       = 0
    # Indicate whether the input catalogs are from cubic simulation boxes.
    # Boolean option, true for omitting the weights and random catalogs.
LINE_OF_SIGHT   = 
    # Unit line-of-sight vector for cubic simulation boxes (unset: [0,0,1]).
    # 3-element double array.
BOX_SIZE        = 6000
    # Side length of the box that catalogs are placed in.
    # Double-precision number or 3-element double array.
    # Coordinates from simulation boxes should be in [0, `BOX_SIZE`).
    # For non-simulation case the catalog is placed at the centre of the box.
    # It is mandatory if `CUBIC_SIM` is true.
BOX_PAD         = 
    # Fraction of the extent of catalogs to be padded with 0 (unset: 0.02).
    # Double-precision number or 3-element double array.
    # It is for determing the box size automatically, if `BOX_SIZE` is unset.
GRID_SIZE       = 512
    # Number of grid cells per box side for the density fields and FFT.
    # Integer, preferably the power of 2.
PARTICLE_ASSIGN = 
    # Scheme for assigning particles to grids (unset: 2).
    # Integer, allowed values are
    # * 0: Nearest-Grid-Point (NGP);
    # * 1: Could-In-Cell (CIC);
    # * 2: Triangular Shaped Cloud (TSC);
    # * 3: Piecewise Cubic Spline (PCS).
GRID_INTERLACE  = 
    # Boolean option, indicate whether to use interlaced grids (unset: F).

#############################
#  Settings for the output  #
#############################

MULTIPOLE       = [0,2,4]
    # Legendre multipoles to be evaluated, up to ell = 6.
    # Integer or integer array (e.g. "[0, 2, 4]")
LOG_SCALE       = 
    # Indicator for linear or logarithm wave number bins (unset: F).
    # Boolean option, true for logarithm bins, false for linear bins.
KMIN            = 
    # Lower boundary of the first wave number bin (unset: 0).
    # Double-precision number.
KMAX            = 
    # Upper boundary of the last wave number bin (unset: Nyquist frequency).
    # Double-precision number.
    # It is rounded to the closest bin edge defined by `KMIN` and `BIN_SIZE`,
    #   and below the Nyquist frequency.
BIN_SIZE        = 0.001
    # Width of each wave number bin.
    # Base-10 logarithm of the ratio between two bins for logarithm scale.
OUTPUT_AUTO     = test/lc_auto_ref.powspec
    # Name of the output files for auto power spectra.
    # String or 2-element string array. Unset or "" for only cross correlations.
OUTPUT_CROSS    = 
    # String, name of the output file for cross power spectrum.
OUTPUT_HEADER   = 
    # Boolean option, indicate whether to write extra information (unset: T)
    # If true, write metadata of the catalogs and meshes, as well as shot noise
    #   and normalisation terms to the header of the output files.
OVERWRITE       = 1
    # Integer, indicate whether to overwrite existing files (unset: 0).
    # Allowed values are:
    # * 0: quit the program when an output file exist;
    # * positive: force overwriting output files whenever possible;
    # * negative: notify at most this number of times for existing files.
VERBOSE         = 
    # Boolean option, indicate whether show detailed outputs (unset: T).
